/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.box.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * A standard representation of a file version
 */
@Schema(description = "A standard representation of a file version")

public class FileVersion {
  @JsonProperty("id")
  private String id = null;

  /**
   * &#x60;file_version&#x60;
   */
  public enum TypeEnum {
    FILE_VERSION("file_version");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("created_at")
  private DateTime createdAt = null;

  @JsonProperty("modified_at")
  private DateTime modifiedAt = null;

  @JsonProperty("trashed_at")
  private DateTime trashedAt = null;

  @JsonProperty("restored_at")
  private DateTime restoredAt = null;

  @JsonProperty("purged_at")
  private DateTime purgedAt = null;

  @JsonProperty("uploader_display_name")
  private String uploaderDisplayName = null;

  @JsonProperty("sha1")
  private String sha1 = null;

  public FileVersion id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier that represent a file version.
   * @return id
  **/
  @Schema(example = "12345", description = "The unique identifier that represent a file version.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FileVersion type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * &#x60;file_version&#x60;
   * @return type
  **/
  @Schema(example = "file_version", description = "`file_version`")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public FileVersion name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the file version
   * @return name
  **/
  @Schema(example = "tigers.jpeg", description = "The name of the file version")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FileVersion size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Size of the file version in bytes
   * @return size
  **/
  @Schema(example = "629644", description = "Size of the file version in bytes")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public FileVersion createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When the file version object was created
   * @return createdAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version object was created")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public FileVersion modifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * When the file version object was last updated
   * @return modifiedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version object was last updated")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(DateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public FileVersion trashedAt(DateTime trashedAt) {
    this.trashedAt = trashedAt;
    return this;
  }

   /**
   * When the file version object was trashed.
   * @return trashedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version object was trashed.")
  public DateTime getTrashedAt() {
    return trashedAt;
  }

  public void setTrashedAt(DateTime trashedAt) {
    this.trashedAt = trashedAt;
  }

  public FileVersion restoredAt(DateTime restoredAt) {
    this.restoredAt = restoredAt;
    return this;
  }

   /**
   * When the file version was restored from the trash.
   * @return restoredAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version was restored from the trash.")
  public DateTime getRestoredAt() {
    return restoredAt;
  }

  public void setRestoredAt(DateTime restoredAt) {
    this.restoredAt = restoredAt;
  }

  public FileVersion purgedAt(DateTime purgedAt) {
    this.purgedAt = purgedAt;
    return this;
  }

   /**
   * When the file version object will be permanently deleted.
   * @return purgedAt
  **/
  @Schema(example = "2012-12-12T10:53:43-08:00", description = "When the file version object will be permanently deleted.")
  public DateTime getPurgedAt() {
    return purgedAt;
  }

  public void setPurgedAt(DateTime purgedAt) {
    this.purgedAt = purgedAt;
  }

  public FileVersion uploaderDisplayName(String uploaderDisplayName) {
    this.uploaderDisplayName = uploaderDisplayName;
    return this;
  }

   /**
   * The display name of the user that uploaded the file. In most cases this is the name of the user logged in at the time of the upload.  If the file was uploaded using a File Request form that requires the user to provide an email address, this field is populated with that email address. If an email address was not required in the File Request form, this field is set to return a value of &#x60;File Request&#x60;.  In all other anonymous cases where no email was provided this field will default to a value of &#x60;Someone&#x60;.
   * @return uploaderDisplayName
  **/
  @Schema(example = "Ellis Wiggins", description = "The display name of the user that uploaded the file. In most cases this is the name of the user logged in at the time of the upload.  If the file was uploaded using a File Request form that requires the user to provide an email address, this field is populated with that email address. If an email address was not required in the File Request form, this field is set to return a value of `File Request`.  In all other anonymous cases where no email was provided this field will default to a value of `Someone`.")
  public String getUploaderDisplayName() {
    return uploaderDisplayName;
  }

  public void setUploaderDisplayName(String uploaderDisplayName) {
    this.uploaderDisplayName = uploaderDisplayName;
  }

  public FileVersion sha1(String sha1) {
    this.sha1 = sha1;
    return this;
  }

   /**
   * The SHA1 hash of this version of the file.
   * @return sha1
  **/
  @Schema(example = "134b65991ed521fcfe4724b7d814ab8ded5185dc", description = "The SHA1 hash of this version of the file.")
  public String getSha1() {
    return sha1;
  }

  public void setSha1(String sha1) {
    this.sha1 = sha1;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileVersion fileVersion = (FileVersion) o;
    return Objects.equals(this.id, fileVersion.id) &&
        Objects.equals(this.type, fileVersion.type) &&
        Objects.equals(this.name, fileVersion.name) &&
        Objects.equals(this.size, fileVersion.size) &&
        Objects.equals(this.createdAt, fileVersion.createdAt) &&
        Objects.equals(this.modifiedAt, fileVersion.modifiedAt) &&
        Objects.equals(this.trashedAt, fileVersion.trashedAt) &&
        Objects.equals(this.restoredAt, fileVersion.restoredAt) &&
        Objects.equals(this.purgedAt, fileVersion.purgedAt) &&
        Objects.equals(this.uploaderDisplayName, fileVersion.uploaderDisplayName) &&
        Objects.equals(this.sha1, fileVersion.sha1);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, name, size, createdAt, modifiedAt, trashedAt, restoredAt, purgedAt, uploaderDisplayName, sha1);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileVersion {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    trashedAt: ").append(toIndentedString(trashedAt)).append("\n");
    sb.append("    restoredAt: ").append(toIndentedString(restoredAt)).append("\n");
    sb.append("    purgedAt: ").append(toIndentedString(purgedAt)).append("\n");
    sb.append("    uploaderDisplayName: ").append(toIndentedString(uploaderDisplayName)).append("\n");
    sb.append("    sha1: ").append(toIndentedString(sha1)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
